#! /bin/sh
set -e

#DEBHELPER#

if [ -d /usr/lib/#MULTIARCH#/gio/modules ]; then
    # Purge the cache
    rm -f /usr/lib/#MULTIARCH#/gio/modules/giomodule.cache
    rmdir -p --ignore-fail-on-non-empty /usr/lib/#MULTIARCH#/gio/modules
fi
if [ -d /usr/lib/gio/modules ]; then
    # Purge the cache
    if [ $(dpkg --print-architecture) = #ARCH# ]; then
        rm -f /usr/lib/gio/modules/giomodule.cache
        rmdir -p --ignore-fail-on-non-empty /usr/lib/gio/modules
    fi
fi

if [ "$1" = purge ] && [ -d /usr/share/glib-2.0/schemas ]; then
    # Purge the compiled schemas
    rm -f /usr/share/glib-2.0/schemas/gschemas.compiled
    rmdir -p --ignore-fail-on-non-empty /usr/share/glib-2.0/schemas

    # With multiarch enabled we can't be certain that the cache file
    # isn't needed for other architectures since it is not reference
    # counted. The best we can do is to fire a file trigger which will
    # regenerate the cache file if required.
    if [ -d /usr/share/glib-2.0/schemas ]; then
        dpkg-trigger /usr/share/glib-2.0/schemas
    fi
fi
